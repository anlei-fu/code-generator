<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.contract.mapper.ContractNotaryRecordMapper">
    <insert id="addContractNotaryRecord" parameterType="com.contract.pojo.req.AddContractNotaryRecordReq">
          insert  into contract_notary_record t
          <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractId != null">
                  t.contract_id,
            </if>
            <if test="notaryChannel != null">
                  t.notary_channel,
            </if>
            <if test="notaryEndTime != null">
                  t.notary_end_time,
            </if>
            <if test="notaryStartTime != null">
                  t.notary_start_time,
            </if>
            <if test="notaryStatus != null">
                  t.notary_status,
            </if>
            <if test="proposer != null">
                  t.proposer,
            </if>
             t.create_time
          </trim>
          values
          <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractId != null">
                  #{contractId},
            </if>
            <if test="notaryChannel != null">
                  #{notaryChannel},
            </if>
            <if test="notaryEndTime != null">
                  #{notaryEndTime},
            </if>
            <if test="notaryStartTime != null">
                  #{notaryStartTime},
            </if>
            <if test="notaryStatus != null">
                  #{notaryStatus},
            </if>
            <if test="proposer != null">
                  #{proposer},
            </if>
             current_timestamp
          </trim>
    </insert>
    <delete id="deleteContractNotaryRecordById">
          delete from contract_notary_record t
          <where>
            <if test="id != null">
                  t.id = #{id}
            </if>
          </where>
    </delete>
    <update id="updateContractNotaryRecordById" parameterType="com.contract.pojo.param.UpdateContractNotaryRecordByIdParams">
        update contract_notary_record t
        <set>
            <if test="contractId != null">
                  t.contract_id = #{ContractId},
            </if>
            <if test="notaryChannel != null">
                  t.notary_channel = #{NotaryChannel},
            </if>
            <if test="notaryEndTime != null">
                  t.notary_end_time = #{NotaryEndTime},
            </if>
            <if test="notaryStartTime != null">
                  t.notary_start_time = #{NotaryStartTime},
            </if>
            <if test="notaryStatus != null">
                  t.notary_status = #{NotaryStatus},
            </if>
            <if test="proposer != null">
                  t.proposer = #{Proposer}
            </if>
        </set>
          <where>
            <if test="id != null">
                  t.id = #{id}
            </if>
          </where>
    </update>
    <select id="getContractNotaryRecordById" resultType="com.contract.pojo.entity.ContractNotaryRecord">
          select
             t.contract_id,
             t.create_time,
             t.id,
             t.notary_channel,
             t.notary_end_time,
             t.notary_start_time,
             t.notary_status,
             t.proposer
          form contract_notary_record t
          <where>
            <if test="id != null">
                  t.id = #{id}
            </if>
          </where>
    </select>
    <select id="getContractNotaryRecordList" resultType="com.contract.pojo.entity.ContractNotaryRecord" parameterType="com.contract.pojo.req.GetContractNotaryRecordListReq">
          select
             t.contract_id,
             t.create_time,
             t.id,
             t.notary_channel,
             t.notary_end_time,
             t.notary_start_time,
             t.notary_status,
             t.proposer
          form contract_notary_record t
          <where>
            <if test="contractId != null">
                  t.contract_id = #{contractId}
            </if>
            <if test="createTimeStart !=null and  createTimeEnd != null">
                  and t.create_time between #{createTimeStart} and #{createTimeEnd}
            </if>
            <if test="notaryChannel != null">
                  and t.notary_channel = #{notaryChannel}
            </if>
            <if test="notaryEndTimeStart !=null and  notaryEndTimeEnd != null">
                  and t.notary_end_time between #{notaryEndTimeStart} and #{notaryEndTimeEnd}
            </if>
            <if test="notaryStartTimeStart !=null and  notaryStartTimeEnd != null">
                  and t.notary_start_time between #{notaryStartTimeStart} and #{notaryStartTimeEnd}
            </if>
            <if test="notaryStatus != null">
                  and t.notary_status = #{notaryStatus}
            </if>
            <if test="proposer != null">
                  and t.proposer = #{proposer}
            </if>
          </where>
    </select>
</mapper>
